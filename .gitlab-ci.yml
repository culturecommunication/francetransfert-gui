image: node:10

# # Stages definition
stages:
  - lint
  - test
  - sonar
  - build
  - docker

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules
    - dist
    - coverage

# Lint phase
mc-francetransfert-upload-download-gui:lint:
  before_script:
    - echo "Pipeline Lint stage ..."
    - npm install
  stage: lint
  script:
    - npm run lint

#Test phase
mc-francetransfert-upload-download-gui:test:
  image: weboaks/node-karma-protractor-chrome
  before_script:
    - echo "Pipeline Test stage ..."
  stage: test
  allow_failure: true
  script:
    - npm run test

#Sonar Develop phase
mc-francetransfert-core-gui:sonar:develop:
  image: weboaks/node-karma-protractor-chrome
  before_script:
    - echo "Pipeline Sonar Develop stage ..."
  stage: sonar
  allow_failure: true
  only:
    refs:
      - develop
  script:
    - bash ci/sonar/sonarDev.sh

#Sonar Master phase
mc-francetransfert-core-gui:sonar:master:
  image: weboaks/node-karma-protractor-chrome
  before_script:
    - echo "Pipeline Sonar Master stage ..."
  stage: sonar
  allow_failure: true
  only:
    refs:
      - master
  script:
    - bash ci/sonar/sonarProd.sh

#Build phase
mc-francetransfert-upload-download-gui:build:
  before_script:
    - echo "Pipeline Build stage ..."
  stage: build
  only:
    - develop
    - sp4d
    - master
  script:
    - npm run build
    - cp -R static/* dist/

#Docker phase
mc-francetransfert-upload-download-gui:docker:
  image: docker:stable
  before_script:
    - echo "Pipeline Docker stage ..."
    - sed -i "s|localhost|${DEVIC_URL}|g" nginx.conf
  stage: docker
  only:
    - develop
    - sp4d
  services:
    - docker:18-dind
  script:
    - _tmpTag="$(date "+%Y%m%d%H%M")"_"$CI_COMMIT_SHORT_SHA"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE":"$_tmpTag" .
    - docker tag "$CI_REGISTRY_IMAGE":"$_tmpTag" "$CI_REGISTRY_IMAGE":latest
    - docker push "$CI_REGISTRY_IMAGE":"$_tmpTag"
    - docker push "$CI_REGISTRY_IMAGE":latest
