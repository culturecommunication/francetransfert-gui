properties([gitLabConnection('GitLab')])
import Version
def version = new Version()

node {

    println "============================"
    println "Branche: " + env.BRANCH_NAME
    println "============================"

    // = Checkout
    stage('Checkout') {
        deleteDir()
        checkout scm  
        //env.GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse --short origin/'+env.BRANCH_NAME).trim()
        //env.GIT_AUTHOR = sh(returnStdout: true, script: 'git --no-pager show -s --format=\'%an\' origin/'+env.BRANCH_NAME).trim()
        //env.GIT_COMMIT_MESSAGE = sh(returnStdout: true, script: 'git log --format=format:%s -1').trim()
    }
    
    gitlabCommitStatus('build')
    {
        stage('Build') {
            sh 'npm install'
			sh 'npm run build'
        }
    }
    
    gitlabCommitStatus('test')
    {
        stage('Test') {
            //sh 'npm run test'
        }
    }
    
    // = Package
    gitlabCommitStatus('package')
    {
        stage('Package') {
            sh 'cp package.json dist'
            sh 'npm publish dist --registry https://pic-culture.actontechnology.com/nexus/repository/npm-culture/'
            jsonObject =  readJSON file: 'package.json'
            if(env.BRANCH_NAME.startsWith('develop')){
                version.updateVersionGit('app_upload_version',jsonObject["version"],'recette')
            }
            if(env.BRANCH_NAME.startsWith('master')){
                version.updateVersionGit('app_upload_version',jsonObject["version"],'production')
            }
        }

        
    }

    gitlabCommitStatus('deploy')
    {
        stage ('Ansible') {

            if(env.BRANCH_NAME.startsWith('develop')){
                build job: 'deployement',wait:false, parameters: [
                booleanParam(name: 'INFRA', value: false),
                string(name: 'ENVIRONNEMENT', value: "recette"),
                ]
            }

            if(env.BRANCH_NAME.startsWith('master')){
                build job: 'deployement',wait:false, parameters: [
                booleanParam(name: 'INFRA', value: false),
                string(name: 'ENVIRONNEMENT', value: "production"),
                ]
            }
        }
    }
    
}

